name: Release Build

on:
  release:
    types: [published]

jobs:
  generate-build-number:
    name: "#️⃣ Generate Build Number"
    runs-on: ubuntu-18.04
    outputs:
      build-number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
      - name: "#️⃣ Generate Build Number"
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}
          prefix: "build-numbers/release"

  build-apk:
    needs: generate-build-number
    name: "🛠 Build APK"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: "🧰 Set up JDK 1.8"
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: "🏗🖋 Build APK"
        run: |
          echo "$KEYSTORE_ENCODED" | base64 --decode > KEYSTORE
          ./gradlew :app:assembleDebug --stacktrace
        shell: bash
      - name: "⌛ Prepare Artifacts"
        id: prep_build_artifacts
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk app-debug-build-${{ needs.generate-build-number.outputs.build-number }}.apk
      - name: "☁ Upload APK to GitHub"
        uses: actions/upload-artifact@v1
        with:
          name: build-artifacts
          path: app-debug-build-${{ needs.generate-build-number.outputs.build-number }}.apk

  update-published-release:
    needs: [generate-build-number, build-apk]
    name: "Upload Release Assets"
    runs-on: ubuntu-18.04

    steps:
      - name: "Download Build Artifacts"
        uses: actions/download-artifact@v1
        with:
          name: build-artifacts
      - name: "Prepare Build Artifacts"
        id: prep_build_artifacts
        run: |
          zip -r build-artifacts.zip build-artifacts
      - name: "Update Release Name"
        uses: tubone24/update_release@v1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_name: Release ${{ github.event.release.tag_name }} - Build ${{ needs.generate-build-number.outputs.build-number }}
      - name: "☁ Upload Build Artifacts to Published Release"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build-artifacts.zip
          asset_name: build-artifacts.zip
          asset_content_type: application/zip
